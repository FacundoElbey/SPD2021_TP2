#include <Keypad.h>
#include <LiquidCrystal.h>
#define v A0
#define a A1
#define r A2

LiquidCrystal lcd(0,1,2,3,4,13);

const byte FILAS = 4;
const byte COLUMNAS = 4;
char keys[FILAS][COLUMNAS] = {
  {'1','2','3','A'},
  {'4','5','6','B'},
  {'7','8','9','C'},
  {'*','0','#','D'}
};

byte pinesFilas[FILAS] = {12, 11, 10, 9};
byte pinesColumnas[COLUMNAS] = {8, 7, 6, 5};

Keypad teclado = Keypad(makeKeymap(keys), pinesFilas, pinesColumnas, FILAS, COLUMNAS );

char TECLA;
char CLAVE[7];
char CLAVE_DEFAULT[7] = "2C2021"; 
byte INDICE = 0;

void setup()
{
	lcd.begin(16, 2);
  
  	pinMode(v, OUTPUT); 
	pinMode(a, OUTPUT); 
	pinMode(r, OUTPUT); 
	pinMode(A3, INPUT); // botones
  
    lcd.print("PASSWORD:");
}

int estadoLedR = LOW;
int estadoLedV = LOW;
int estadoLedA = HIGH;
unsigned long millisAnterior = 0;

void loop()
{
  TECLA = teclado.getKey();
  
  if(TECLA)
  {
    CLAVE[INDICE] = TECLA;
    INDICE++;
    lcd.print(TECLA);
  }
  
  if(INDICE == 6)
  {
    if(!strcmp(CLAVE, CLAVE_DEFAULT))
    {
      int f;
      lcd.clear();
      lcd.print("Password OK");
      titilarLed(&estadoLedV, v);
      
      INDICE = 0;
    }
    else
    {
      lcd.clear();
      lcd.print("Password Fail");
      titilarLed(&estadoLedV, r);
      INDICE = 0;
    }
  }
   /* BotonConfigurationAhora = digitalRead(BotonConfiguration);
   if(BotonConfigurationAhora == HIGH && BotonConfigurationAntes == LOW)
  {
    lcd.clear();
    lcd.print("Password:");
    if(TECLA)
  	{
    CLAVE[INDICE] = TECLA;
    INDICE++;
    lcd.print(TECLA);
  	}
    if(INDICE == 6)
    {
      strcpy(CLAVE_DEFAULT, CLAVE);
      lcd.clear();
      lcd.print("Password change!");
      INDICE = 0;
    }
  }
  */
}

void titilarLed(int *estadoLed,int pin)
{
  unsigned long millisActual = millis();
  for(int i = 0; i < 6; i++)
  {
    if(millisActual + millisAnterior >= 1000)
    {
      *estadoLed = !*estadoLed;
      digitalWrite(pin, *estadoLed);
    }  
      millisAnterior = millisActual;

  }
  
}